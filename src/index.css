@import "@mikekorakakis/react-3d-animated-card/dist/index.css";
@tailwind base;
@tailwind components;
@tailwind utilities;

body {
    @apply bg-topettefondo
}

.menutopette {
    @apply border-l-4 border-topettegreen py-2 px-3 m-3 cursor-pointer hover:bg-topettehover block mt-4 lg:inline-block duration-300 hover:px-10
}

.menuheader {
    @apply border-l-4 border-topettegreen py-2 px-3 m-3 hover:px-5 bg-menuheader2 hover:bg-menuheader1 hover:right-3 w-4/5 hover:w-5/6 duration-300 text-white md:text-6xl text-2xl
}

.menuheader2 {
    @apply border-l-4 border-topettegreen py-2 px-3 m-3 hover:px-6 bg-menuheader3 hover:bg-menuheader2 hover:right-3 w-4/5 hover:w-11/12 duration-300 text-white md:text-6xl text-2xl 
}

.titulo {
    @apply border-l-4 border-topettegreen py-2 px-3 m-3 md:flex md:items-center md:justify-center text-white text-4xl 
}

.active {
    @apply font-bold duration-75
}


 /* header image parallax */
.parent {
  position: relative;
  top: 0;
  left: 0;
}

.image1 {
  position: relative;
  top: 0;
  left: 0;
}

.image2 {
  position: absolute;
  top: 30px;
  left: 30px;
}

 /* PNG parallax */

.container {
  width: 100%;
  height: 100%;
}

.banner {
  width: 100%;
 /* height: 600px;*/
  position: relative;
}

.parallax {
  width: 100%;
  height: 100%;
  position: absolute;

}


 /* Astronaut parallax */

.layer {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-position: center;
  background-repeat: no-repeat;
  background-size: contain;
  will-change: transform;
}

.layer1 {
  background-image: url('./assets/bg/background2_02.jpg');
  background-size: cover;
  opacity: 0.75;
  height: calc(100% + 5vh);
  left: -2.5vw;
  top: -2.5vh;
  width: calc(100% + 5vw);
}

.layer2 {
  background-image: url('./assets/portatil.png');
  background-size: contain;
  background-position: center center;
}

.text-container {
  position: relative;
}

 /* bg Images parallax */

 .react-parallax-bgimage {

  object-fit: cover!important;

 }

 /* Skills animations */

 @keyframes skill-animate1 {
    0% {
        transform: translateX(100%);
    }
    100% {
        transform: translateX(90%);
    }
}

@keyframes skill-animate2 {
    0% {
        transform: translateX(100%);
    }
    100% {
        transform: translateX(90%);
    }
}

@keyframes skill-animate3 {
    0% {
        transform: translateX(100%);
    }
    100% {
        transform: translateX(99%);
    }
}

.skillanimate1 {
    animation: skill-animate1 1s ease infinite alternate;
}

.skillanimate2 {
    animation: skill-animate2 3s ease infinite alternate;
}

.skillanimate3 {
    animation: skill-animate3 0.5s ease infinite alternate;
}

 /* Skill numbers animations 1 */

@property --num {
  syntax: "<integer>";
  initial-value: 50;
  inherits: false;
}

.skillnumber1 {
  animation: counter 1s infinite alternate ease-in-out;
  counter-reset: num var(--num);
}
.skillnumber1::after {
  content: counter(num);
}

@keyframes counter {
  from {
    --num: 50;
  }
  to {
    --num: 85;
  }
}

/* Skill numbers animations 2 */

@property --num {
  syntax: "<integer>";
  initial-value: 50;
  inherits: false;
}

.skillnumber2 {
  animation: counter 2s infinite alternate ease-in-out;
  counter-reset: num var(--num);
}
.skillnumber2::after {
  content: counter(num);
}

@keyframes counter {
  from {
    --num: 80;
  }
  to {
    --num: 95;
  }
}


/* Skill numbers animations 3 */

@property --num {
  syntax: "<integer>";
  initial-value: 90;
  inherits: false;
}

.skillnumber3 {
  animation: counter 2s infinite alternate ease-in-out;
  counter-reset: num var(--num);
}
.skillnumber3::after {
  content: counter(num);
}

@keyframes counter {
  from {
    --num: 90;
  }
  to {
    --num: 95;
  }
}


/* Skill numbers animations 4 */

@property --num {
  syntax: "<integer>";
  initial-value: 50;
  inherits: false;
}

.skillnumber4 {
  animation: counter 2s infinite alternate ease-in-out;
  counter-reset: num var(--num);
}
.skillnumber4::after {
  content: counter(num);
}

@keyframes counter {
  from {
    --num: 50;
  }
  to {
    --num: 65;
  }
}


/* Skill numbers animations 5 */

@property --num {
  syntax: "<integer>";
  initial-value: 50;
  inherits: false;
}

.skillnumber5 {
  animation: counter 2s infinite alternate ease-in-out;
  counter-reset: num var(--num);
}
.skillnumber5::after {
  content: counter(num);
}

@keyframes counter {
  from {
    --num: 60;
  }
  to {
    --num: 70;
  }
}